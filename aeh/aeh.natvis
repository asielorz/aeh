<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <Type Name="aeh::fixed_capacity_vector&lt;*&gt;">
    <DisplayString>{{ size={size_} }}</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>size_</Size>
        <ValuePointer>($T1 const *)(&amp;buffer)</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="aeh::msp::immutable_array&lt;*&gt;">
    <DisplayString>{{ size={ptr.shared_object->value.size_} }}</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>ptr.shared_object->value.size_</Size>
        <ValuePointer>($T1 const *)(ptr.shared_object->value.data_)</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="aeh::msp::shared_ptr&lt;*&gt;">
    <DisplayString Condition="shared_object != nullptr">{shared_object->value}</DisplayString>
    <DisplayString Condition="shared_object == nullptr">null</DisplayString>
    <Expand>
      <Item Name="Value" Condition="shared_object != nullptr">&amp;shared_object->value</Item>
      <Item Name="Ref count" Condition="shared_object != nullptr">shared_object->reference_counter</Item>

      <Item Name="Value" Condition="shared_object == nullptr">($T1 const *)(0)</Item>
      <Item Name="Ref count" Condition="shared_object == nullptr">0</Item>
    </Expand>
  </Type>

  <Type Name="aeh::msp::cow&lt;*&gt;">
    <DisplayString>{pointer.shared_object->value}</DisplayString>
    <Expand>
      <ExpandedItem>pointer.shared_object->value</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="aeh::ChangeStack&lt;*&gt;">
    <DisplayString>{changes}</DisplayString>
    <Expand>
      <Item Name="Current item">changes[currently_active]</Item>
      <Item Name="Current index">currently_active</Item>
      <Item Name="Size">changes.size()</Item>
      <Item Name="Last saved">last_saved</Item>
      <ExpandedItem>changes,view(simple)</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="aeh::ring&lt;*&gt;">
    <DisplayString>{{ size={size_} }}</DisplayString>
    <Expand>
      <Synthetic Name="Layout">
        <DisplayString>{{ capacity={capacity_}, first={first_} }}</DisplayString>
        <Expand>
          <IndexListItems>
            <Size>capacity_</Size>
            <ValueNode Condition="($i &gt;= first_ &amp;&amp; $i &lt; first_ + size_) || (first_ + size_ &gt; capacity_ &amp;&amp; $i &lt; first_ + size_ - capacity_)">buffer_[$i]</ValueNode>
          </IndexListItems>
        </Expand>
      </Synthetic>
      
      <IndexListItems>
        <Size>size_</Size>
        <ValueNode>buffer_[(first_ + $i) % capacity_]</ValueNode>
      </IndexListItems>
    </Expand>
  </Type>

</AutoVisualizer>
